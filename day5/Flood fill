int m, n;
    void dfs(int r, int c, vector<vector<int>>& image, vector<vector<int>>& ans, int color,
    int iniColor){
        ans[r][c] = color;

        int  drow[] = {-1, 0, 1, 0};
        int dcol[] = {0, 1, 0, -1};

        for(int i=0; i<4; i++){
            int nrow = r+drow[i];
            int ncol = c+dcol[i];
            if(nrow>=0 && nrow<m && ncol>=0 && ncol<n && image[nrow][ncol] == iniColor &&
            ans[nrow][ncol] != color){
                dfs(nrow, ncol, image, ans, color, iniColor);
            }
        }
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int iniColor = image[sr][sc];
        m = image.size();
        n = image[0].size();

        vector<vector<int>> ans(image.begin(), image.end());

        dfs(sr, sc, image, ans, color, iniColor);
        return ans;
    }
