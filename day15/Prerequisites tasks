bool isPossible(int N,int P, vector<pair<int, int> >& prerequisites) {
	    vector<int> adj[N];
	    for(auto it : prerequisites){
	        int u = it.first;
	        int v = it.second;
	        
	        adj[v].push_back(u);
	    }
	    vector<int> indegree(N);
	    for(int i=0; i<N; i++){
	        for(auto j : adj[i]){
	            indegree[j]++;
	        }
	    }
	    queue<int> q;
	    for(int i=0; i<N; i++){
	        if(indegree[i] == 0) q.push(i);
	    }
	    int cnt = 0;
	    while(!q.empty()){
	        int node = q.front();
	        q.pop();
	        cnt++;
	        
	        for(auto it : adj[node]){
	            indegree[it]--;
	            if(indegree[it] == 0) q.push(it);
	        }
	    }
	    return (cnt == N) ? true : false;
	}
