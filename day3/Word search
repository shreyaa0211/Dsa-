bool dfs(int r, int c, vector<vector<char>>& board, vector<vector<int>>& vis,
    string word, int k){
        
        if(k == word.size()) return true;

        vis[r][c] = 1;
        int m = board.size();
        int n = board[0].size();

        int drow[] = {-1,0,1,0};
        int dcol[] = {0, 1, 0, -1};

        for(int i=0; i<4; i++){
            int nrow = r + drow[i];
            int ncol = c + dcol[i];

            if(nrow>=0 && nrow<m && ncol>=0 && ncol<n && !vis[nrow][ncol] && 
            board[nrow][ncol] == word[k]){
                if(dfs(nrow, ncol, board, vis, word, k+1)) return true;
            }
        }
        vis[r][c] = 0;
        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m = board.size();
        int n = board[0].size();

        vector<vector<int>> vis(m, vector<int>(n,0));

        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(!vis[i][j] && board[i][j] == word[0]){
                    if(dfs(i, j, board, vis, word, 1)) return true;
                }
            }
        }
        return false;
    }
